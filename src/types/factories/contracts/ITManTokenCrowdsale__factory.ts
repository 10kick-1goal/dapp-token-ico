/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  ITManTokenCrowdsale,
  ITManTokenCrowdsaleInterface,
} from "../../contracts/ITManTokenCrowdsale";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_openingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevClosingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newClosingTime",
        type: "uint256",
      },
    ],
    name: "TimedCrowdsaleExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cac38038062001cac8339818101604052810190620000379190620003b5565b8181848888886001600081905550600083116200008b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200008290620005bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f590620005df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000168906200059b565b60405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000270576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002679062000557565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505042821015620002f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ef9062000535565b60405180910390fd5b8181116200033d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003349062000579565b60405180910390fd5b8160068190555080600781905550505050505050505062000894565b6000815190506200036a816200082c565b92915050565b600081519050620003818162000846565b92915050565b600081519050620003988162000860565b92915050565b600081519050620003af816200087a565b92915050565b60008060008060008060c08789031215620003cf57600080fd5b6000620003df89828a016200039e565b9650506020620003f289828a0162000370565b95505060406200040589828a0162000387565b94505060606200041889828a0162000359565b93505060806200042b89828a016200039e565b92505060a06200043e89828a016200039e565b9150509295509295509295565b60006200045a60338362000601565b9150620004678262000678565b604082019050919050565b60006200048160348362000601565b91506200048e82620006c7565b604082019050919050565b6000620004a860378362000601565b9150620004b58262000716565b604082019050919050565b6000620004cf60248362000601565b9150620004dc8262000765565b604082019050919050565b6000620004f660148362000601565b91506200050382620007b4565b602082019050919050565b60006200051d60258362000601565b91506200052a82620007dd565b604082019050919050565b6000602082019050818103600083015262000550816200044b565b9050919050565b60006020820190508181036000830152620005728162000472565b9050919050565b60006020820190508181036000830152620005948162000499565b9050919050565b60006020820190508181036000830152620005b681620004c0565b9050919050565b60006020820190508181036000830152620005d881620004e7565b9050919050565b60006020820190508181036000830152620005fa816200050e565b9050919050565b600082825260208201905092915050565b60006200061f826200064e565b9050919050565b600062000633826200064e565b9050919050565b6000620006478262000612565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f54696d656443726f776473616c653a206f70656e696e672074696d652069732060008201527f6265666f72652063757272656e742074696d6500000000000000000000000000602082015250565b7f416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657460008201527f20697320746865207a65726f2061646472657373000000000000000000000000602082015250565b7f54696d656443726f776473616c653a206f70656e696e672074696d652069732060008201527f6e6f74206265666f726520636c6f73696e672074696d65000000000000000000602082015250565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f43726f776473616c653a20726174652069732030000000000000000000000000600082015250565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b620008378162000612565b81146200084357600080fd5b50565b620008518162000626565b81146200085d57600080fd5b50565b6200086b816200063a565b81146200087757600080fd5b50565b62000885816200066e565b81146200089157600080fd5b50565b61140880620008a46000396000f3fe6080604052600436106100a05760003560e01c8063521eb27311610064578063521eb27314610193578063b7a8807c146101be578063bf583903146101e9578063bff99c6c14610214578063ec8ac4d81461023f578063fc0c546a1461025b576100b7565b80631515bc2b146100bc5780632c4e722e146100e75780634042b66f1461011257806347535d7b1461013d5780634b6753bc14610168576100b7565b366100b7576100b56100b0610286565b61028e565b005b600080fd5b3480156100c857600080fd5b506100d1610367565b6040516100de9190610ead565b60405180910390f35b3480156100f357600080fd5b506100fc610373565b6040516101099190610fe5565b60405180910390f35b34801561011e57600080fd5b5061012761037d565b6040516101349190610fe5565b60405180910390f35b34801561014957600080fd5b50610152610387565b60405161015f9190610ead565b60405180910390f35b34801561017457600080fd5b5061017d6103a2565b60405161018a9190610fe5565b60405180910390f35b34801561019f57600080fd5b506101a86103ac565b6040516101b59190610e32565b60405180910390f35b3480156101ca57600080fd5b506101d36103d6565b6040516101e09190610fe5565b60405180910390f35b3480156101f557600080fd5b506101fe6103e0565b60405161020b9190610fe5565b60405180910390f35b34801561022057600080fd5b50610229610555565b6040516102369190610e17565b60405180910390f35b61025960048036038101906102549190610bdb565b61028e565b005b34801561026757600080fd5b5061027061057f565b60405161027d9190610ec8565b60405180910390f35b600033905090565b6102966105a9565b60003490506102a582826105f9565b60006102b08261064e565b9050816004546102c0919061105b565b6004819055506102d08382610665565b8273ffffffffffffffffffffffffffffffffffffffff166102ef610286565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051610336929190611000565b60405180910390a36103488383610673565b610350610677565b61035a83836106e2565b50506103646106e6565b50565b60006007544211905090565b6000600354905090565b6000600454905090565b6000600654421015801561039d57506007544211155b905090565b6000600754905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600654905090565b60006105506103ed61057f565b73ffffffffffffffffffffffffffffffffffffffff166370a08231600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610e17565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610c2d565b61049f61057f565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b81526004016104fb929190610e4d565b60206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610c2d565b6106f0565b905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260005414156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690610fa5565b60405180910390fd5b6002600081905550565b610601610387565b610640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063790610f05565b60405180910390fd5b61064a8282610709565b5050565b60006003548261065e91906110b1565b9050919050565b61066f828261075e565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106df573d6000803e3d6000fd5b50565b5050565b6001600081905550565b60008183106106ff5781610701565b825b905092915050565b610711610387565b610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074790610f05565b60405180910390fd5b61075a828261076c565b5050565b6107688282610824565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d390610f45565b60405180910390fd5b6000811415610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790610fc5565b60405180910390fd5b5050565b61087a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838361085461057f565b73ffffffffffffffffffffffffffffffffffffffff1661087e909392919063ffffffff16565b5050565b610901846323b872dd60e01b85858560405160240161089f93929190610e76565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610907565b50505050565b6000610969826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109ce9092919063ffffffff16565b90506000815111156109c957808060200190518101906109899190610c04565b6109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90610f85565b60405180910390fd5b5b505050565b60606109dd84846000856109e6565b90509392505050565b606082471015610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290610f25565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a549190610e00565b60006040518083038185875af1925050503d8060008114610a91576040519150601f19603f3d011682016040523d82523d6000602084013e610a96565b606091505b5091509150610aa787838387610ab3565b92505050949350505050565b60608315610b1657600083511415610b0e57610ace85610b29565b610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490610f65565b60405180910390fd5b5b829050610b21565b610b208383610b4c565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610b5f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b939190610ee3565b60405180910390fd5b600081359050610bab8161138d565b92915050565b600081519050610bc0816113a4565b92915050565b600081519050610bd5816113bb565b92915050565b600060208284031215610bed57600080fd5b6000610bfb84828501610b9c565b91505092915050565b600060208284031215610c1657600080fd5b6000610c2484828501610bb1565b91505092915050565b600060208284031215610c3f57600080fd5b6000610c4d84828501610bc6565b91505092915050565b610c5f8161111d565b82525050565b610c6e8161110b565b82525050565b610c7d8161112f565b82525050565b6000610c8e82611029565b610c98818561103f565b9350610ca8818560208601611189565b80840191505092915050565b610cbd81611165565b82525050565b6000610cce82611034565b610cd8818561104a565b9350610ce8818560208601611189565b610cf1816111eb565b840191505092915050565b6000610d0960188361104a565b9150610d14826111fc565b602082019050919050565b6000610d2c60268361104a565b9150610d3782611225565b604082019050919050565b6000610d4f602a8361104a565b9150610d5a82611274565b604082019050919050565b6000610d72601d8361104a565b9150610d7d826112c3565b602082019050919050565b6000610d95602a8361104a565b9150610da0826112ec565b604082019050919050565b6000610db8601f8361104a565b9150610dc38261133b565b602082019050919050565b6000610ddb60198361104a565b9150610de682611364565b602082019050919050565b610dfa8161115b565b82525050565b6000610e0c8284610c83565b915081905092915050565b6000602082019050610e2c6000830184610c65565b92915050565b6000602082019050610e476000830184610c56565b92915050565b6000604082019050610e626000830185610c65565b610e6f6020830184610c65565b9392505050565b6000606082019050610e8b6000830186610c65565b610e986020830185610c65565b610ea56040830184610df1565b949350505050565b6000602082019050610ec26000830184610c74565b92915050565b6000602082019050610edd6000830184610cb4565b92915050565b60006020820190508181036000830152610efd8184610cc3565b905092915050565b60006020820190508181036000830152610f1e81610cfc565b9050919050565b60006020820190508181036000830152610f3e81610d1f565b9050919050565b60006020820190508181036000830152610f5e81610d42565b9050919050565b60006020820190508181036000830152610f7e81610d65565b9050919050565b60006020820190508181036000830152610f9e81610d88565b9050919050565b60006020820190508181036000830152610fbe81610dab565b9050919050565b60006020820190508181036000830152610fde81610dce565b9050919050565b6000602082019050610ffa6000830184610df1565b92915050565b60006040820190506110156000830185610df1565b6110226020830184610df1565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006110668261115b565b91506110718361115b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110a6576110a56111bc565b5b828201905092915050565b60006110bc8261115b565b91506110c78361115b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611100576110ff6111bc565b5b828202905092915050565b60006111168261113b565b9050919050565b60006111288261113b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061117082611177565b9050919050565b60006111828261113b565b9050919050565b60005b838110156111a757808201518184015260208101905061118c565b838111156111b6576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f54696d656443726f776473616c653a206e6f74206f70656e0000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b6113968161110b565b81146113a157600080fd5b50565b6113ad8161112f565b81146113b857600080fd5b50565b6113c48161115b565b81146113cf57600080fd5b5056fea26469706673582212208f9f7f82da626eda285891bb799e68bd569f82e86b3712aab4ea5876fbcc96c464736f6c63430008040033";

type ITManTokenCrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ITManTokenCrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ITManTokenCrowdsale__factory extends ContractFactory {
  constructor(...args: ITManTokenCrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rate: PromiseOrValue<BigNumberish>,
    _wallet: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _tokenWallet: PromiseOrValue<string>,
    _openingTime: PromiseOrValue<BigNumberish>,
    _closingTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ITManTokenCrowdsale> {
    return super.deploy(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    ) as Promise<ITManTokenCrowdsale>;
  }
  override getDeployTransaction(
    _rate: PromiseOrValue<BigNumberish>,
    _wallet: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _tokenWallet: PromiseOrValue<string>,
    _openingTime: PromiseOrValue<BigNumberish>,
    _closingTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    );
  }
  override attach(address: string): ITManTokenCrowdsale {
    return super.attach(address) as ITManTokenCrowdsale;
  }
  override connect(signer: Signer): ITManTokenCrowdsale__factory {
    return super.connect(signer) as ITManTokenCrowdsale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ITManTokenCrowdsaleInterface {
    return new utils.Interface(_abi) as ITManTokenCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITManTokenCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as ITManTokenCrowdsale;
  }
}
